generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Chat {
  id String @id @default(uuid())

  ChatterChat    ChatterChat[]
  Message        Message[]
  Channel        Channel?
  ChannelMembers ChannelMembers[]

  @@map("chats")
}

model Message {
  id                String   @id @default(uuid())
  type              String
  value             String
  parent_message_id String?  @unique
  chat_id           String
  chatter_id        String
  created_at        DateTime @default(now())

  parent_message Message? @relation("parent_message", fields: [parent_message_id], references: [id])
  Message        Message? @relation("parent_message")
  chat           Chat     @relation(fields: [chat_id], references: [id])
  chatter        Chatter  @relation(fields: [chatter_id], references: [id])

  @@map("messages")
}

model Chatter {
  id         String @id @default(uuid())
  name       String
  email      String @unique
  avatar_url String
  banner_url String

  channels       Channel[]
  ChatterChat1   ChatterChat[]    @relation("chatter_1")
  ChatterChat2   ChatterChat[]    @relation("chatter_2")
  ChannelMembers ChannelMembers[]
  Message        Message[]

  @@map("chatters")
}

model ChatterChat {
  id           String @id @default(uuid())
  chatter_1_id String
  chatter_2_id String
  chat_id      String

  chatter_1 Chatter @relation("chatter_1", fields: [chatter_1_id], references: [id])
  chatter_2 Chatter @relation("chatter_2", fields: [chatter_2_id], references: [id])
  chat      Chat    @relation(fields: [chat_id], references: [id])

  @@map("chatter_chats")
}

model Channel {
  id        String  @id @default(uuid())
  name      String
  hash      String  @unique
  is_public Boolean @default(true)
  owner_id  String
  chat_id   String  @unique

  owner Chatter @relation(fields: [owner_id], references: [id])
  chat  Chat    @relation(fields: [chat_id], references: [id])

  @@map("channels")
}

model ChannelMembers {
  id              String @id @default(uuid())
  channel_chat_id String
  chatter_id      String

  chat    Chat    @relation(fields: [channel_chat_id], references: [id])
  chatter Chatter @relation(fields: [chatter_id], references: [id])
}
